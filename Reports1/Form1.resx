<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>